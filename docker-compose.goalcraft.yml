# ===========================================
# GoalCraftAI - Configuration compl√®te avec WebSocket
# ===========================================
# Usage: docker compose -f docker-compose.goalcraft.yml up -d

version: '3.8'

services:
  # Application Next.js GoalCraft
  goalcraft-app:
    build:
      context: ./services/goalcraft/frontend
      dockerfile: Dockerfile
    container_name: goalcraft-app
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:${MONGO_PASSWORD:-goalcraft2024}@goalcraft-mongodb:27017/goalcraft?authSource=admin
      - NEXTAUTH_URL=${NEXTAUTH_URL:-https://goalcraft.store}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - N8N_WEBHOOK_URL=http://n8n:5678/webhook
      - N8N_API_KEY=${N8N_API_KEY}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-https://goalcraft.store}
      - SERVER_URL=${SERVER_URL:-https://goalcraft.store}
      # WebSocket configuration
      - WEBSOCKET_URL=ws://goalcraft-websocket:3002
      - NEXT_PUBLIC_WEBSOCKET_URL=wss://ws.goalcraft.store
    depends_on:
      - goalcraft-mongodb
      - goalcraft-websocket
    restart: unless-stopped
    networks:
      - goalcraft-network

  # Serveur WebSocket pour GoalCraft
  goalcraft-websocket:
    build:
      context: ./services/goalcraft/frontend
      dockerfile: Dockerfile.websocket
    container_name: goalcraft-websocket
    ports:
      - "127.0.0.1:3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MONGODB_URI=mongodb://admin:${MONGO_PASSWORD:-goalcraft2024}@goalcraft-mongodb:27017/goalcraft?authSource=admin
    depends_on:
      - goalcraft-mongodb
    restart: unless-stopped
    networks:
      - goalcraft-network

  # MongoDB pour GoalCraft
  goalcraft-mongodb:
    image: mongo:7
    container_name: goalcraft-mongodb
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-goalcraft2024}
      - MONGO_INITDB_DATABASE=goalcraft
    volumes:
      - goalcraft_mongodb_data:/data/db
      - ./services/goalcraft/docker/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    restart: unless-stopped
    networks:
      - goalcraft-network

  # n8n pour les workflows IA
  n8n:
    image: n8nio/n8n:latest
    container_name: goalcraft-n8n
    ports:
      - "127.0.0.1:5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST:-n8n.questpulse.store}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://${N8N_HOST:-n8n.questpulse.store}/
      - GENERIC_TIMEZONE=Europe/Paris
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - N8N_EXECUTION_TIMEOUT=3600
      - N8N_EXECUTION_TIMEOUT_MAX=7200
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    networks:
      - goalcraft-network

networks:
  goalcraft-network:
    driver: bridge

volumes:
  goalcraft_mongodb_data:
    driver: local
  n8n_data:
    driver: local