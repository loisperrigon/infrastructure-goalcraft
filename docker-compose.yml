# ===========================================
# Docker Compose - Infrastructure Template
# ===========================================
# 1. Copiez ce template pour votre client
# 2. Ajoutez vos services selon les besoins
# 3. Configurez les variables dans .env

version: '3.8'

services:
  # ========================================
  # N8N - Workflow Automation
  # ========================================
  n8n:
    image: n8nio/n8n:latest
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    environment:
      N8N_HOST: ${N8N_HOST:-n8n.questpulse.store}
      WEBHOOK_URL: https://${N8N_HOST:-n8n.questpulse.store}/
      WEBHOOK_TUNNEL_URL: https://${N8N_HOST:-n8n.questpulse.store}/
      VUE_APP_URL_BASE_API: https://${N8N_HOST:-n8n.questpulse.store}/
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      GENERIC_TIMEZONE: Europe/Paris
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: ${N8N_PASSWORD}
      N8N_PUSH_BACKEND: websocket
      N8N_SECURE_COOKIE: "true"
      N8N_RUNNERS_ENABLED: "true"
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
      N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE: "true"
      N8N_WEBHOOK_TTL: 600
      N8N_EXECUTION_TIMEOUT: 3600
      N8N_EXECUTION_TIMEOUT_MAX: 7200
      EXECUTIONS_TIMEOUT: 3600
      EXECUTIONS_TIMEOUT_MAX: 7200
    env_file:
      - .env
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - app-network

  # ========================================
  # GoalCraftAI - Application de gestion d'objectifs avec IA
  # ========================================
  goalcraft-app:
    build:
      context: ./services/goalcraft/frontend
      dockerfile: Dockerfile
    container_name: goalcraft-app
    ports:
      - "127.0.0.1:3000:3000"
      - "127.0.0.1:3002:3002"  # WebSocket server
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:${MONGO_PASSWORD}@goalcraft-mongodb:27017/goalcraft?authSource=admin
      - NEXTAUTH_URL=${NEXTAUTH_URL:-https://questpulse.store}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - N8N_WEBHOOK_URL=http://n8n:5678/webhook
      - N8N_API_KEY=${N8N_API_KEY}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-https://questpulse.store}
      - SERVER_URL=${SERVER_URL:-https://questpulse.store}
      - NEXT_PUBLIC_WEBSOCKET_URL=${NEXT_PUBLIC_WEBSOCKET_URL:-wss://questpulse.store/ws}
    depends_on:
      - goalcraft-mongodb
      - n8n
    restart: unless-stopped
    networks:
      - app-network

  goalcraft-mongodb:
    image: mongo:7
    container_name: goalcraft-mongodb
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=goalcraft
    volumes:
      - goalcraft_mongodb_data:/data/db
      - ./services/goalcraft/docker/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    restart: unless-stopped
    networks:
      - app-network

  # ========================================
  # Ajoutez vos autres services ici
  # ========================================
  
  # Voir examples/docker-compose.examples.yml pour des exemples

networks:
  app-network:
    driver: bridge

volumes:
  # ========================================
  # Volumes
  # ========================================
  n8n_data:
    driver: local
  goalcraft_mongodb_data:
    driver: local